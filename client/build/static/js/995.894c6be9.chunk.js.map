{"version":3,"file":"static/js/995.894c6be9.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Delete.js","components/ViewEmail.jsx","constants/constant.js","services/api.js","hooks/useApi.jsx","services/api.urls.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\n\nimport { Box, Typography, styled } from '@mui/material';\nimport { useOutletContext, useLocation } from 'react-router-dom';\nimport { emptyProfilePic } from '../constants/constant';\nimport { ArrowBack, Delete } from '@mui/icons-material';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from '../services/api.urls';\n\nconst IconWrapper = styled(Box)({\n    padding: 15\n});\n\nconst Subject = styled(Typography)({\n    fontSize: 22,\n    margin: '10px 0 20px 75px',\n    display: 'flex'\n})\n\nconst Indicator = styled(Box)`\n    font-size: 12px !important;\n    background: #ddd;\n    color: #222;\n    border-radius: 4px;\n    margin-left: 6px;\n    padding: 2px 4px;\n    align-self: center;\n`;\n\nconst Image = styled('img')({\n    borderRadius: '50%',\n    width: 40,\n    height: 40,\n    margin: '5px 10px 0 10px',\n    backgroundColor: '#cccccc'\n});\n\nconst Container = styled(Box)({\n    marginLeft: 15,\n    width: '100%',\n    '& > div': {\n        display: 'flex',\n        '& > p > span': {\n            fontSize: 12,\n            color: '#5E5E5E'\n        }\n    }\n});\n\nconst Date = styled(Typography)({\n    margin: '0 50px 0 auto',\n    fontSize: 12,\n    color: '#5E5E5E'\n})\n\nconst ViewEmail = () => {\n\n    const { openDrawer } = useOutletContext();\n    \n    const { state } = useLocation();\n    const { email } = state;\n\n    const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin)\n\n\n    const deleteEmail = () => {\n        moveEmailsToBinService.call([email._id]);\n        window.history.back();\n\n    }\n\n    return (\n        <Box style={openDrawer ? { marginLeft: 250, width: '100%' } : { width: '100%' } }>\n            <IconWrapper>\n                <ArrowBack fontSize='small' color=\"action\" onClick={() => window.history.back() } />\n                <Delete fontSize='small' color=\"action\" style={{ marginLeft: 40 }} onClick={() => deleteEmail()}/>\n            </IconWrapper>\n            <Subject>{email.subject} <Indicator component=\"span\">Inbox</Indicator></Subject>\n            <Box style={{ display: 'flex' }}>\n                <Image src={emptyProfilePic} alt=\"profile\" />\n                <Container>\n                    <Box>\n                        <Typography>    \n                            {email.to.split('@')[0]} \n                            <Box component=\"span\">&nbsp;&#60;{email.to}&#62;</Box>\n                        </Typography>\n                        <Date>\n                            {(new window.Date(email.date)).getDate()}&nbsp;\n                            {(new window.Date(email.date)).toLocaleString('default', { month: 'long' })}&nbsp;\n                            {(new window.Date(email.date)).getFullYear()} \n                        </Date>\n                    </Box>\n                    <Typography style={{ marginTop: 20 }}>{email.body}</Typography>\n                </Container>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ViewEmail;","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\n\nexport const VIEWS = {\n    inbox: 'inbox',\n    starred: 'starred',\n    sent: 'sent',\n    drafts: 'drafts'\n}\n\nexport const EMPTY_TABS = {\n    inbox: {\n        heading: 'Your inbox is empty',\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\n    },\n    drafts: {\n        heading: \"You don't have any saved drafts.\",\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\n    },\n    starred: {\n        heading: 'No starred messages',\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\n    },\n    sent: {\n        heading: 'No sent messages!',\n        subHeading: 'Send one now!'\n    },\n    bin: {\n        heading: 'No conversations in Bin.',\n        subHeading: ''\n    }\n}","import axios from 'axios';\n\n\nconst API_URL = '';\n\nconst API_GMAIL = async (urlObject, payload, type) => {\n\n    \n    return await axios({\n        method: urlObject.method,\n        url: `${API_URL}/${urlObject.endpoint}/${type}`,\n        data: payload\n    })\n}\n\nexport default API_GMAIL;","import { useState } from \"react\";\nimport API from \"../services/api\";\nconst useApi = (urlObject) => {\n\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const call = async (payload, type='') => {\n        setResponse(null);\n        setIsLoading(true);\n\n        try{\n            let response = await API(urlObject, payload, type);\n            setResponse(response.data)\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return {call, response, error, setIsLoading}\n}\n\nexport default useApi;","export const API_URLS = {\n    saveSentEmail : {\n        endpoint:'save',\n        method: 'POST'\n    },\n    getEmailFromType: {\n        endpoint: 'emails',\n        method: 'GET'\n    },\n    saveDraftEmails: {\n        endpoint: 'save-draft',\n        method: 'POST'\n    },\n    moveEmailsToBin: {\n        endpoint: 'bin',\n        method: 'POST'\n    },\n    toggleStarredEmail: {\n        endpoint: 'starred',\n        method: 'POST'\n    },\n    deleteEmail: {\n        endpoint: 'delete',\n        method: 'DELETE'\n    }\n}"],"names":["createSvgIcon","_jsx","d","IconWrapper","styled","Box","padding","Subject","Typography","fontSize","margin","display","Indicator","Image","borderRadius","width","height","backgroundColor","Container","marginLeft","color","Date","ViewEmail","openDrawer","useOutletContext","state","useLocation","email","moveEmailsToBinService","useApi","API_URLS","moveEmailsToBin","_jsxs","style","children","ArrowBack","onClick","window","history","back","Delete","call","_id","subject","component","src","emptyProfilePic","alt","to","split","date","getDate","toLocaleString","month","getFullYear","marginTop","body","gmailLogo","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","async","urlObject","payload","type","axios","method","url","endpoint","data","response","setResponse","useState","error","setError","isLoading","setIsLoading","arguments","length","undefined","API","message","saveSentEmail","getEmailFromType","saveDraftEmails","toggleStarredEmail","deleteEmail"],"sourceRoot":""}